/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package perfumearomasalesmanagementsystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cherryphoopyae
 */
public class PerfumeManagementForm extends javax.swing.JFrame {

    /**
     * Creates new form PerfumeManagementForm
     */
    String  p_name,
            fragrance,
            distributor,
            category;
    int     price,
            quantity,
            id;
    
    String[] columnNames = {"Perfume Name","Fragrance","Category","Price","Quantity","Distributor"};
    public PerfumeManagementForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameSearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pnameText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        quantityText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        disType = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        categoryBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        fragranceBox = new javax.swing.JComboBox<>();
        addBtn = new javax.swing.JButton();
        update = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        perfumeTable = new javax.swing.JTable();
        pricemmk = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        disSearch = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        categorySearch = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        fragranceSearch = new javax.swing.JComboBox<>();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setText("Search By Name");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Perfume Name");

        jLabel2.setText("Quantity ");

        jLabel3.setText("Distributor Type");

        disType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Local","Global" }));

        jLabel4.setText("Price in MMK");

        jLabel5.setText("Category");

        categoryBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Man","Woman" }));

        jLabel6.setText("Fragrance");

        fragranceBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flower","Active","Alive","Dull","Levender" }));

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jButton5.setText("Back");

        jButton6.setText("View Inventory");

        jButton7.setText("View Report");

        perfumeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        perfumeTable.getTableHeader().setReorderingAllowed(false);
        perfumeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                perfumeTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(perfumeTable);

        jButton2.setText("Search By Distributor");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        disSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Local","Global" }));

        jButton3.setText("Search by Category");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        categorySearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Man","Woman" }));

        jButton4.setText("Search by Fragrance");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        fragranceSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flower","Active","Alive","Dull","Levender" }));

        jButton8.setText("View All");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnameText, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantityText, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(disType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoryBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fragranceBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pricemmk, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(88, 88, 88))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(update)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6))
                            .addComponent(jButton7)
                            .addComponent(jButton8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(categorySearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(disSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(18, 18, 18)
                                .addComponent(fragranceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(275, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pnameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(quantityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(disType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(pricemmk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(fragranceBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(update)
                    .addComponent(deleteBtn))
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addGap(181, 181, 181)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(nameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(disSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(categorySearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fragranceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
         Connection conn = myConn.getConnection();
         try{
             if(pnameText.getText()!=""&&quantityText.getText()!=""&&pricemmk.getText()!=""){
                 String sql = "INSERT INTO perfume (perfume_name,perfume_category,distributor,perfume_price,fragrance) VALUES(?,?,?,?,?)";
                 PreparedStatement ps = conn.prepareStatement(sql);
                 ps.setString(1, pnameText.getText());
                  ps.setString(2, (String) categoryBox.getSelectedItem());
                    ps.setString(3, (String) disType.getSelectedItem());
                      ps.setInt(4, Integer.parseInt(pricemmk.getText()));
                     ps.setString(5, (String) fragranceBox.getSelectedItem());
                     ps.executeUpdate();
                     
                 String sql2 = "SELECT id FROM perfume ORDER BY id DESC LIMIT 1";
                 PreparedStatement ps2 = conn.prepareStatement(sql2);
                 ResultSet rs = ps2.executeQuery();
                 if(rs.next()){
                      String sql3 = "INSERT INTO inventory (quantity,perfume_id) VALUES (?,?)";
                      PreparedStatement ps3 = conn.prepareStatement(sql3);
                      ps3.setString(1,quantityText.getText());
                      ps3.setInt(2,rs.getInt("id"));
                      ps3.executeUpdate();
                 }
                 getTable();
                 
             }
             else{
                 JOptionPane.showMessageDialog(null,"Fill all the fields");
             }
         }
         catch(Exception ex)
{
JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_addBtnActionPerformed

   
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
          getTable();
  
    }//GEN-LAST:event_formWindowOpened
 private void getTable(){
         DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columnNames);
        Connection conn = myConn.getConnection();
        perfumeTable.setModel(model);
     

try{
String sql = "SELECT perfume_name,fragrance,perfume_category,perfume_price, quantity,distributor FROM perfume INNER JOIN inventory ON perfume.id = inventory.perfume_id";
PreparedStatement ps = conn.prepareStatement(sql);
ResultSet rs = ps.executeQuery();
int i = 0;
while(rs.next()){
    p_name = rs.getString("perfume_name");
    fragrance = rs.getString("fragrance");
    category = rs.getString("perfume_category");
    price = rs.getInt("perfume_price");
    quantity = rs.getInt("quantity");
    distributor = rs.getString("distributor");
  
    model.addRow(new Object[]{p_name,fragrance,category,price,quantity,distributor});
    i++;
}

}
catch(Exception ex)
{
JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
JOptionPane.ERROR_MESSAGE);
}
        
    
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columnNames);
        Connection conn = myConn.getConnection();
        perfumeTable.setModel(model);
     

try{
String sql = "SELECT perfume_name,fragrance,perfume_category,perfume_price, quantity,distributor FROM perfume INNER JOIN inventory ON perfume.id = inventory.perfume_id WHERE perfume_name=?";
PreparedStatement ps = conn.prepareStatement(sql);
ps.setString(1, (String)nameSearch.getText());
ResultSet rs = ps.executeQuery();
int i = 0;
while(rs.next()){
    p_name = rs.getString("perfume_name");
    fragrance = rs.getString("fragrance");
    category = rs.getString("perfume_category");
    price = rs.getInt("perfume_price");
    quantity = rs.getInt("quantity");
    distributor = rs.getString("distributor");
   
    model.addRow(new Object[]{p_name,fragrance,category,price,quantity,distributor});
    i++;
}

}
catch(Exception ex)
{
JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
JOptionPane.ERROR_MESSAGE);
}
    
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void perfumeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_perfumeTableMouseClicked
        // TODO add your handling code here:
       
        int selectedRowIndex = perfumeTable.getSelectedRow();
        pnameText.setText((String) perfumeTable.getValueAt(selectedRowIndex,0));
        quantityText.setText(Integer.toString((int) perfumeTable.getValueAt(selectedRowIndex,4)));
        disType.setSelectedItem((String) perfumeTable.getValueAt(selectedRowIndex,5));
        pricemmk.setText(Integer.toString((int) perfumeTable.getValueAt(selectedRowIndex,3)));
        categoryBox.setSelectedItem((String) perfumeTable.getValueAt(selectedRowIndex,2));
        fragranceBox.setSelectedItem((String) perfumeTable.getValueAt(selectedRowIndex,1));
        try{
        Connection conn = myConn.getConnection();
        String sql = "SELECT id from perfume WHERE perfume_name=?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setString(1, (String)pnameText.getText());
        ResultSet rs = ps.executeQuery();
        if(rs.next()){
            id = rs.getInt("id");
        }
        System.out.println("id is "+id);
        }
        catch(SQLException e){}
        
    }//GEN-LAST:event_perfumeTableMouseClicked

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        Connection conn = myConn.getConnection();
        try{
            if(pnameText.getText()!=""){
                String sql = "DELETE FROM perfume WHERE perfume_name = ?";
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setString(1, pnameText.getText());
                ps.executeUpdate();
                getTable();
                
            }
        }
         catch(Exception ex)
{
JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
JOptionPane.ERROR_MESSAGE);
}
     
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        Connection conn = myConn.getConnection();
        try{
        if(pnameText.getText()!=""&&quantityText.getText()!=""&&pricemmk.getText()!=""){
            
                      String sql3 = "UPDATE inventory SET quantity=? WHERE perfume_id=?";
                      PreparedStatement ps3 = conn.prepareStatement(sql3);
                      ps3.setString(1,quantityText.getText());
                      ps3.setInt(2,id);
                      ps3.executeUpdate();
                 
                
            String sql = "UPDATE perfume SET perfume_name=?, perfume_category=?,distributor=?,perfume_price=?, fragrance=? WHERE id=?";
            PreparedStatement ps= conn.prepareStatement(sql);
            ps.setString(1,(String)pnameText.getText());
            ps.setString(2,(String)categoryBox.getSelectedItem());
            ps.setString(3, (String)disType.getSelectedItem());
            ps.setInt(4, Integer.parseInt(pricemmk.getText()));
            ps.setString(5, (String) fragranceBox.getSelectedItem());
            ps.setInt(6,id);
            ps.executeUpdate();
           
                 getTable();
            
          
            
        }
        }
         catch(Exception ex)
{
JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
JOptionPane.ERROR_MESSAGE);
}
        
    }//GEN-LAST:event_updateActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columnNames);
        Connection conn = myConn.getConnection();
        perfumeTable.setModel(model);
     

try{
String sql = "SELECT perfume_name,fragrance,perfume_category,perfume_price, quantity,distributor FROM perfume INNER JOIN inventory ON perfume.id = inventory.perfume_id WHERE distributor=?";
PreparedStatement ps = conn.prepareStatement(sql);
ps.setString(1, (String)disSearch.getSelectedItem());
ResultSet rs = ps.executeQuery();
int i = 0;
while(rs.next()){
    p_name = rs.getString("perfume_name");
    fragrance = rs.getString("fragrance");
    category = rs.getString("perfume_category");
    price = rs.getInt("perfume_price");
    quantity = rs.getInt("quantity");
    distributor = rs.getString("distributor");
   
    model.addRow(new Object[]{p_name,fragrance,category,price,quantity,distributor});
    i++;
}

}
catch(Exception ex)
{
JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
JOptionPane.ERROR_MESSAGE);
}
    
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columnNames);
        Connection conn = myConn.getConnection();
        perfumeTable.setModel(model);
     

try{
String sql = "SELECT perfume_name,fragrance,perfume_category,perfume_price, quantity,distributor FROM perfume INNER JOIN inventory ON perfume.id = inventory.perfume_id WHERE perfume_category=?";
PreparedStatement ps = conn.prepareStatement(sql);
ps.setString(1, (String)categorySearch.getSelectedItem());
ResultSet rs = ps.executeQuery();
int i = 0;
while(rs.next()){
    p_name = rs.getString("perfume_name");
    fragrance = rs.getString("fragrance");
    category = rs.getString("perfume_category");
    price = rs.getInt("perfume_price");
    quantity = rs.getInt("quantity");
    distributor = rs.getString("distributor");
   
    model.addRow(new Object[]{p_name,fragrance,category,price,quantity,distributor});
    i++;
}

}
catch(Exception ex)
{
JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
JOptionPane.ERROR_MESSAGE);
}
    
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columnNames);
        Connection conn = myConn.getConnection();
        perfumeTable.setModel(model);
     

try{
String sql = "SELECT perfume_name,fragrance,perfume_category,perfume_price, quantity,distributor FROM perfume INNER JOIN inventory ON perfume.id = inventory.perfume_id WHERE fragrance=?";
PreparedStatement ps = conn.prepareStatement(sql);
ps.setString(1, (String)fragranceSearch.getSelectedItem());
ResultSet rs = ps.executeQuery();
int i = 0;
while(rs.next()){
    p_name = rs.getString("perfume_name");
    fragrance = rs.getString("fragrance");
    category = rs.getString("perfume_category");
    price = rs.getInt("perfume_price");
    quantity = rs.getInt("quantity");
    distributor = rs.getString("distributor");
   
    model.addRow(new Object[]{p_name,fragrance,category,price,quantity,distributor});
    i++;
}

}
catch(Exception ex)
{
JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
JOptionPane.ERROR_MESSAGE);
}
    
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        getTable();
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PerfumeManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PerfumeManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PerfumeManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PerfumeManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PerfumeManagementForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JComboBox<String> categoryBox;
    private javax.swing.JComboBox<String> categorySearch;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JComboBox<String> disSearch;
    private javax.swing.JComboBox<String> disType;
    private javax.swing.JComboBox<String> fragranceBox;
    private javax.swing.JComboBox<String> fragranceSearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameSearch;
    private javax.swing.JTable perfumeTable;
    private javax.swing.JTextField pnameText;
    private javax.swing.JTextField pricemmk;
    private javax.swing.JTextField quantityText;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
